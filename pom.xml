<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.samply</groupId>
    <artifactId>parent</artifactId>
    <version>11.1.1</version>
  </parent>

  <artifactId>share.broker.rest</artifactId>
  <version>8.6.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Searchbroker</name>
  <description>Samply Share Broker Rest is a part of the Sample Locator where the queries of the
    Sample Locator are stored and made available for the bridgeheads.
  </description>
  <url>https://github.com/samply/share-broker-rest</url>
  <organization>
    <name>Samply Community</name>
  </organization>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Deniz Tas</name>
      <email>d.tas@dkfz-heidelberg.de</email>
      <organization>German Cancer Research Center</organization>
      <organizationUrl>https://www.dkfz.de/en/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/samply/share-broker-rest.git</connection>
    <developerConnection>scm:git:https://github.com/samply/share-broker-rest.git
    </developerConnection>
    <url>https://github.com/samply/share-broker-rest</url>
  </scm>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>


  <properties>
    <!-- Samply dependencies -->
    <version.samply.common.config>5.1.0</version.samply.common.config>
    <common-mailing.version>3.0.0</common-mailing.version>
    <common-http.version>7.4.0</common-http.version>
    <jsf-renderer.version>2.0.0</jsf-renderer.version>
    <share-common.version>4.3.0</share-common.version>
    <share-dto.version>5.3.0</share-dto.version>
    <bbmri-auth-dto.version>2.0.0</bbmri-auth-dto.version>
    <!-- general dependencies -->
    <!-- We must keep the older mojarra version as the opening of elements
         in the search_query.xhtml is not working, otherwise. -->
    <version.mojarra>2.2.13</version.mojarra>

    <version.flyway>4.2.0</version.flyway>
    <version.jooq>3.12.4</version.jooq>
    <el-impl.version>2.2</el-impl.version>
    <jstl.version>1.2</jstl.version>
    <simple-jndi.version>0.17.2</simple-jndi.version>
    <commons-fileupload.version>1.3.3</commons-fileupload.version>
    <omnifaces.version>1.14.1</omnifaces.version>
    <log4j.version>2.16.0</log4j.version>
    <commons-collections4.version>4.2</commons-collections4.version>
    <jcifs.version>1.3.17</jcifs.version>
    <jackson-core-asl.version>1.9.13</jackson-core-asl.version>
    <itextpdf.version>5.5.13</itextpdf.version>
    <bcprov-jdk15on.version>1.69</bcprov-jdk15on.version>
    <quartz.version>2.3.0</quartz.version>
    <javaee-api.version>8.0</javaee-api.version>
    <weld.version>2.4.8.Final</weld.version>
    <cdi.version>1.2</cdi.version>
    <version.gson>2.8.5</version.gson>
    <microprofile-openapi-api.version>2.0-MR1</microprofile-openapi-api.version>
    <geronimo-openapi-maven-plugin.version>1.0.12</geronimo-openapi-maven-plugin.version>
    <commons-lang3.version>3.7</commons-lang3.version>
    <jsf-api.version>2.2.15</jsf-api.version>
    <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
    <postgresql.version>42.2.25</postgresql.version>
    <commons-io.version>2.6</commons-io.version>
    <guava.version>24.0-jre</guava.version>
    <swagger-ui.version>3.25.0</swagger-ui.version>
    <poi-ooxml.version>3.17</poi-ooxml.version>
    <easymock.version>4.0.2</easymock.version>
    <java-hamcrest.version>2.0.0.0</java-hamcrest.version>
    <version.jersey>2.31</version.jersey>
    <junit-jupiter.version>5.8.2</junit-jupiter.version>
    <junit-platform-launcher.version>1.1.0</junit-platform-launcher.version>
    <togglz-core.version>2.6.1.Final</togglz-core.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>bbmri-auth-dto</artifactId>
      <version>${bbmri-auth-dto.version}</version>
    </dependency>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>share-dto</artifactId>
      <version>${share-dto.version}</version>
    </dependency>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>common-config</artifactId>
      <version>${version.samply.common.config}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <version>${jsf-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>${jsf-api.version}</version>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javaee-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
      <version>${javax.servlet-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>el-impl</artifactId>
      <version>${el-impl.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.h-thurow</groupId>
      <artifactId>simple-jndi</artifactId>
      <version>${simple-jndi.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${version.jooq}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${version.flyway}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${version.gson}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <artifactId>jettison</artifactId>
      <groupId>org.codehaus.jettison</groupId>
      <version>1.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.omnifaces</groupId>
      <artifactId>omnifaces</artifactId>
      <version>${omnifaces.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <version>${log4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${commons-collections4.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>jcifs</groupId>
      <artifactId>jcifs</artifactId>
      <version>${jcifs.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>${jackson-core-asl.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itextpdf</artifactId>
      <version>${itextpdf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>${bcprov-jdk15on.version}</version>
    </dependency>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>common-mailing</artifactId>
      <version>${common-mailing.version}</version>
    </dependency>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>share-common</artifactId>
      <version>${share-common.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.ws.rs</groupId>
          <artifactId>jsr311-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>common-http</artifactId>
      <version>${common-http.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>common-config</artifactId>
          <groupId>de.samply</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>de.samply</groupId>
      <artifactId>jsf-renderer</artifactId>
      <version>${jsf-renderer.version}</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz-jobs</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>${cdi.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet</artifactId>
      <version>${weld.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.ext.cdi</groupId>
      <artifactId>jersey-cdi1x-servlet</artifactId>
      <version>${version.jersey}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.openapi</groupId>
      <artifactId>microprofile-openapi-api</artifactId>
      <version>${microprofile-openapi-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>swagger-ui</artifactId>
      <version>${swagger-ui.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${poi-ooxml.version}</version>
    </dependency>
    <dependency>
      <groupId>org.togglz</groupId>
      <artifactId>togglz-core</artifactId>
      <version>${togglz-core.version}</version>
    </dependency>

    <!-- Tests -->
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>${easymock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit-platform-launcher.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>java-hamcrest</artifactId>
      <version>${java-hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-junit</artifactId>
      <version>${java-hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>searchbroker</finalName>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <!-- Flyway Plugin - Create Database from SQL files - Always place here before JOOQ -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>${version.flyway}</version>
        <!-- The Flyway plugin is executed in the generate-sources phase, prior to compilation -->
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <url>${database.url}</url>
          <user>${database.username}</user>
          <password>${database.password}</password>
          <schemas>
            <schema>${database.schema}</schema>
          </schemas>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp/META-INF</directory>
              <filtering>true</filtering>
              <targetPath>META-INF</targetPath>
            </resource>
          </webResources>
          <archive>
            <manifestEntries>
              <Samply-Project-Context>${project.context}</Samply-Project-Context>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <!-- JOOQ Plugin - Generate Java Classes from Database - Always place here after Flyway -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${version.jooq}</version>
        <!-- The jOOQ code generation plugin is executed in the generate-sources phase, prior to compilation -->
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <jdbc>
            <driver>org.postgresql.Driver</driver>
            <url>${database.url}</url>
            <user>${database.username}</user>
            <password>${database.password}</password>
          </jdbc>
          <generator>
            <database>
              <name>org.jooq.meta.postgres.PostgresDatabase</name>
              <includes>.*</includes>
              <excludes>samply.schema_version</excludes>
              <inputSchema>${database.schema}</inputSchema>
            </database>
            <generate>
              <relations>true</relations>
              <deprecated>true</deprecated>
              <instanceFields>true</instanceFields>
              <generatedAnnotation>true</generatedAnnotation>
              <records>true</records>
              <pojos>true</pojos>
              <immutablePojos>false</immutablePojos>
              <interfaces>false</interfaces>
              <daos>true</daos>
              <jpaAnnotations>false</jpaAnnotations>
              <validationAnnotations>false</validationAnnotations>
            </generate>
            <target>
              <packageName>de.samply.share.broker.model.db</packageName>
              <directory>target/generated-sources/jooq</directory>
            </target>
          </generator>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.geronimo</groupId>
        <artifactId>geronimo-openapi-maven-plugin</artifactId>
        <version>${geronimo-openapi-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>generate-openapi.json</id>
            <phase>compile</phase>
            <goals>
              <goal>openapi.json</goal>
            </goals>
            <configuration>
              <output>target/searchbroker/openapi.json</output>
              <application>de.samply.share.broker.rest.SearchbrokerRestActivator</application>
              <endpointClasses>
                <endpointClass>de.samply.share.broker.rest.Searchbroker</endpointClass>
              </endpointClasses>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Skip tests because of jenkins error-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>false</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- ${project.context} also defines the folder where flyway looks for sql files -->
    <profile>
      <id>samply</id>
      <properties>
        <project.context>samply</project.context>
        <database.username>${project.context}</database.username>
        <database.password>${project.context}</database.password>
        <database.url>jdbc:postgresql://localhost:5432/${project.context}.searchbroker
        </database.url>
        <database.schema>${project.context}</database.schema>
      </properties>
    </profile>
    <profile>
      <id>dktk</id>
      <properties>
        <project.context>dktk</project.context>
        <database.username>samplyweb</database.username>
        <database.password>samplyweb</database.password>
        <database.url>jdbc:postgresql://localhost:5432/broker</database.url>
        <database.schema>samply</database.schema>
      </properties>
    </profile>
  </profiles>

</project>
