<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
	This config file defines snippets for CQL queries.

	The <preamble> must contain information about FHIR libraries and a variable {0} where the context (Specimen, Patient) will be inserted as well as a variable {1] where codesystems are inserted.
    Variable binding:
        {0}     context (Specimen, Patient)
        {1}     codesystem statements

	The <pathCqlExpression> represents the path starting at the resource corresponding to the context ending with the field in the FHIR resource corresponding to the UI field.
    Variable binding:
	    {0}     atomic expressions will be inserted here.

	Every atomic expression <atomicExpression> represents one condition for a field given by an operator and one or two values.
	It will be choosen dependent on the <operator>. If no operator-specific snippet is provided the connector will use the snippet
	defined for <operator>DEFAULT</operator>.
	Variable binding:
	    {0}     operator
	    {1}     name of a code-system (if present)
	    {2}     url of an extension (if present)
	    {3}     the first value
	    {4}     the second value (max. value)

	IMPORTANT:
		A single apostrophe ' must be escaped by a double apostrophe ''
		Additionally characters such as > < ... must be encoded as &lt; &gt; ... according to XML (see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references)
-->
<cqlConfig>
    <preamble>
        library Retrieve
        using FHIR version ''4.0.0''
        include FHIRHelpers version ''4.0.0''

        {1}

        context {0}

        define InInitialPopulation:
    </preamble>
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:23:1</mdrUrn>
        <codesystemName>   </codesystemName>
        <codesystemUrl>   </codesystemUrl>
        <extensionUrl>   </extensionUrl>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>Patient.gender {0} ''{3}''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(Patient.gender &lt; ''{4}'' and Patient.gender &gt; ''{3}'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>exists(from [Patient] P where {0})</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>P.gender {0} ''{3}''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(P.gender &lt; ''{4}'' and P.gender &gt; ''{3}'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:17:1</mdrUrn>
        <codesystemName>StorageTemperature</codesystemName>
        <codesystemUrl>https://fhir.bbmri.de/CodeSystem/StorageTemperature</codesystemUrl>
        <extensionUrl>https://fhir.bbmri.de/StructureDefinition/StorageTemperature</extensionUrl>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
                exists(
                from [Specimen] S where {0})
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>
                    exists(
                    from S.extension E
                    where E.url = ''{2}''
                    and E.value.coding contains Code ''{3}'' from {1})
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>
                    exists(
                    from Specimen.extension E
                    where E.url = ''{2}''
                    and E.value.coding contains Code ''{3}'' from {1}})
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:16:1</mdrUrn>
        <codesystemName>SampleMaterialType</codesystemName>
        <codesystemUrl>https://fhir.bbmri.de/CodeSystem/SampleMaterialType</codesystemUrl>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
                exists(
                from [Specimen] S where {0})
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>
                    S.value.coding contains Code ''{3}'' from {1}
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>
                    Specimen.value.coding contains Code ''{3}'' from {1}
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>
</cqlConfig>