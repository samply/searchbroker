<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
	This config file defines snippets for CQL queries.

	The <template> must contain information about FHIR libraries and a variable {0} where the context (Specimen, Patient) will be inserted as well as a variable {1} where codesystems are inserted.
    For fields (depending on entity type) which need a singleton statement the variable {2} defines the place where all singleton statements are inserted.
    The predicate {3} is the actual predicate expression for the expression named "InInitialPopulation". That expression defines the inclusion criteria for the population of interest.
    The stratifier statements {4} have to be one or multiple statements which define named expressions. The syntax is:

    define <name>:
      <expression>

    The expression name has to be referenced in the Measure resource in order to be used as stratifier.

    Variable binding:
        {0}     context (Specimen, Patient)
        {1}     codesystem definitions
        {2}     singleton statements
        {3}     predicate
        {4}     stratifier statements

	The <pathCqlExpression> represents the path starting at the resource corresponding to the context ending with the field in the FHIR resource corresponding to the UI field.
    Variable binding:
	    {0}     atomic expressions will be inserted here.

	Every atomic expression <atomicExpression> represents one condition for a field given by an operator and one or two values.
	It will be choosen dependent on the <operator>. If no operator-specific snippet is provided the connector will use the snippet
	defined for <operator>DEFAULT</operator>.
	Variable binding:
	    {0}     operator
	    {1}     url of an extension (if present)
	    {2}     the first value
	    {3}     the second value (max. value)

	IMPORTANT:
		A single apostrophe ' must be escaped by a double apostrophe ''
		Additionally characters such as > < ... must be encoded as &lt; &gt; ... according to XML (see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references)
-->
<cqlConfig>
  <template>library Retrieve
    using FHIR version ''4.0.0''
    include FHIRHelpers version ''4.0.0''

    {1}

    context {0}

    {2}

    define InInitialPopulation:
    {3}

    {4}
  </template>

  <!-- Sampling date -->
  <uiField>
    <codesystem/>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>FHIRHelpers.ToDateTime(S.collection.collected) {0} {2}
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(FHIRHelpers.ToDateTime(S.collection.collected) between {2} and {3})
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Specimen] S
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>FHIRHelpers.ToDateTime(Specimen.collection.collected) {0} {2}
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(FHIRHelpers.ToDateTime(Specimen.collection.collected) between {2} and
          {3})
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:12:1</mdrUrn>
  </uiField>

  <!-- Donor age -->
  <uiField>
    <codesystem/>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>AgeInYears() {0} {2}</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(AgeInYears() between {2} and {3})
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(Today() - {2} year) {0} FHIRHelpers.ToDate(P.birthDate)
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(FHIRHelpers.ToDate(P.birthDate) between (Today() - {3} year) and
          (Today() - {2} year))
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient] P
        where {0} )
      </pathCqlExpression>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:14:1</mdrUrn>
  </uiField>

  <!-- Sample type tissue -->
  <uiField>
    <codesystem>
      <name>SampleMaterialType</name>
      <url>https://fhir.bbmri.de/CodeSystem/SampleMaterialType</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>S.type.coding contains Code ''{2}'' from SampleMaterialType
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Specimen] S
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>Specimen.type.coding contains Code ''{2}'' from SampleMaterialType
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:15:1</mdrUrn>
    <permittedValue>
      <cqlValue>whole-blood</cqlValue>
      <mdrKey>whole_blood-EDTA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>whole-blood</cqlValue>
      <mdrKey>whole_blood_stabilised</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-edta</cqlValue>
      <mdrKey>plasma-EDTA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-citrate</cqlValue>
      <mdrKey>plasma-citrate</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-plasma</cqlValue>
      <mdrKey>plasma_stabilised</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-serum</cqlValue>
      <mdrKey>serum</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>peripheral-blood-cells-vital</cqlValue>
      <mdrKey>peripheral_blood_cells</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>bone-marrow</cqlValue>
      <mdrKey>bone_marrow</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>csf-liquor</cqlValue>
      <mdrKey>liquor/CSF</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>ascites</cqlValue>
      <mdrKey>ascites</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>saliva</cqlValue>
      <mdrKey>saliva</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>urine</cqlValue>
      <mdrKey>urine_spontaneous</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>urine</cqlValue>
      <mdrKey>urine_cumulative</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>stool-faeces</cqlValue>
      <mdrKey>faeces</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>dna</cqlValue>
      <mdrKey>DNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>g-dna</cqlValue>
      <mdrKey>DNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>cf-dna</cqlValue>
      <mdrKey>cfDNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>rna</cqlValue>
      <mdrKey>RNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>liquid-other</cqlValue>
      <mdrKey>liquid_biosamples_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>buffy-coat</cqlValue>
      <mdrKey>liquid_biosamples_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>derivative-other</cqlValue>
      <mdrKey>liquid_biosamples_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-formalin</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tumor-tissue-ffpe</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>normal-tissue-ffpe</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>other-tissue-ffpe</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tumor-tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>normal-tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>other-tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-paxgene-or-else</cqlValue>
      <mdrKey>tissue_PAX_or_similar</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-other</cqlValue>
      <mdrKey>tissue_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>derivative-other</cqlValue>
      <mdrKey>tissue_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>liquid_biosamples_other</cqlValue>
      <mdrKey>dried-whole-blood</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>plasma_stabilised</cqlValue>
      <mdrKey>plasma-heparin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>plasma_stabilised</cqlValue>
      <mdrKey>plasma-cell-free</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>plasma_stabilised</cqlValue>
      <mdrKey>plasma-other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>liquid_biosamples_other</cqlValue>
      <mdrKey>swab</mdrKey>
    </permittedValue>
  </uiField>

  <!-- Sample type liquid -->
  <uiField>
    <codesystem>
      <name>SampleMaterialType</name>
      <url>https://fhir.bbmri.de/CodeSystem/SampleMaterialType</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>S.type.coding contains Code ''{2}'' from SampleMaterialType
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Specimen] S
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>Specimen.type.coding contains Code ''{2}'' from SampleMaterialType
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:16:1</mdrUrn>
    <permittedValue>
      <cqlValue>whole-blood</cqlValue>
      <mdrKey>whole_blood-EDTA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>whole-blood</cqlValue>
      <mdrKey>whole_blood_stabilised</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-edta</cqlValue>
      <mdrKey>plasma-EDTA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-citrate</cqlValue>
      <mdrKey>plasma-citrate</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-plasma</cqlValue>
      <mdrKey>plasma_stabilised</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>blood-serum</cqlValue>
      <mdrKey>serum</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>peripheral-blood-cells-vital</cqlValue>
      <mdrKey>peripheral_blood_cells</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>bone-marrow</cqlValue>
      <mdrKey>bone_marrow</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>csf-liquor</cqlValue>
      <mdrKey>liquor/CSF</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>ascites</cqlValue>
      <mdrKey>ascites</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>saliva</cqlValue>
      <mdrKey>saliva</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>urine</cqlValue>
      <mdrKey>urine_spontaneous</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>urine</cqlValue>
      <mdrKey>urine_cumulative</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>stool-faeces</cqlValue>
      <mdrKey>faeces</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>dna</cqlValue>
      <mdrKey>DNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>g-dna</cqlValue>
      <mdrKey>DNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>cf-dna</cqlValue>
      <mdrKey>cfDNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>rna</cqlValue>
      <mdrKey>RNA</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>liquid-other</cqlValue>
      <mdrKey>liquid_biosamples_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>buffy-coat</cqlValue>
      <mdrKey>liquid_biosamples_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>derivative-other</cqlValue>
      <mdrKey>liquid_biosamples_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-formalin</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tumor-tissue-ffpe</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>normal-tissue-ffpe</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>other-tissue-ffpe</cqlValue>
      <mdrKey>tissue_formalin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tumor-tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>normal-tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>other-tissue-frozen</cqlValue>
      <mdrKey>tissue_frozen</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-paxgene-or-else</cqlValue>
      <mdrKey>tissue_PAX_or_similar</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>tissue-other</cqlValue>
      <mdrKey>tissue_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>derivative-other</cqlValue>
      <mdrKey>tissue_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>liquid_biosamples_other</cqlValue>
      <mdrKey>dried-whole-blood</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>plasma_stabilised</cqlValue>
      <mdrKey>plasma-heparin</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>plasma_stabilised</cqlValue>
      <mdrKey>plasma-cell-free</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>plasma_stabilised</cqlValue>
      <mdrKey>plasma-other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>liquid_biosamples_other</cqlValue>
      <mdrKey>swab</mdrKey>
    </permittedValue>
  </uiField>

  <!-- Storage temperature -->
  <uiField>
    <codesystem>
      <name>StorageTemperature</name>
      <url>https://fhir.bbmri.de/CodeSystem/StorageTemperature</url>
    </codesystem>
    <codesystemName>StorageTemperature</codesystemName>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>
          ( exists(
          from S.extension E
          where E.url = ''{1}''
          and E.value.coding contains Code ''{2}'' from StorageTemperature ) )
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Specimen] S
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>
          ( exists(
          from Specimen.extension E
          where E.url = ''{1}''
          and E.value.coding contains Code ''{2}'' from StorageTemperature ) )
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <extensionUrl>https://fhir.bbmri.de/StructureDefinition/StorageTemperature</extensionUrl>
    <mdrUrn>urn:mdr16:dataelement:17:1</mdrUrn>
    <permittedValue>
      <!-- Plasma-Lithium-Heparin -->
      <cqlValue>temperatureRoom</cqlValue>
      <mdrKey>plasma-lithium-heparin</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Room temperature -->
      <cqlValue>temperatureRoom</cqlValue>
      <mdrKey>RT</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- 2°C bis 10°C -->
      <cqlValue>temperature2to10</cqlValue>
      <mdrKey>two_to_ten_degrees</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- 4°C -->
      <cqlValue>temperatureOther</cqlValue>
      <mdrKey>four_degrees</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Minus 18°C to minus 35°C -->
      <cqlValue>temperature-18to-35</cqlValue>
      <mdrKey>minus_eighteen_to_minus_thirty-five_degrees</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Minus 60°C to minus 85°C -->
      <cqlValue>temperature-60to-85</cqlValue>
      <mdrKey>minus_sixty_to_minus_eighty_five_degrees</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Liquid nitrogen -->
      <cqlValue>temperatureGN</cqlValue>
      <mdrKey>gaseous_nitrogen</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Liquid nitrogen -->
      <cqlValue>temperatureLN</cqlValue>
      <mdrKey>liquid_nitrogene</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Other storage temperature -->
      <cqlValue>temperatureOther</cqlValue>
      <mdrKey>storage_temperature_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <!-- Uncharted storage temperature -->
      <cqlValue>temperatureOther</cqlValue>
      <mdrKey>storage_temperature_uncharted</mdrKey>
    </permittedValue>
  </uiField>

  <!-- Sex -->
  <uiField>
    <codesystems/>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>Patient.gender = ''{2}''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>P.gender != ''{2}''</atomicCqlExpression>
        <operator>&lt;&gt;</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>P.gender = ''{2}''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>P.gender != ''{2}''</atomicCqlExpression>
        <operator>&lt;&gt;</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient] P
        where {0} )
      </pathCqlExpression>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:23:1</mdrUrn>
    <permittedValue>
      <cqlValue>female</cqlValue>
      <mdrKey>female</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>male</cqlValue>
      <mdrKey>male</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>other</cqlValue>
      <mdrKey>sex_other/intersexual</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>unknown</cqlValue>
      <mdrKey>sex_uncharted</mdrKey>
    </permittedValue>
  </uiField>

  <!-- Date of diagnosis -->
  <uiField>
    <codesystem/>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>FHIRHelpers.ToDateTime(C.onset) {0} {2}</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(FHIRHelpers.ToDateTime(C.onset) between {2} and {3})
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Condition] C
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>FHIRHelpers.ToDateTime(C.onset) {0} {2}</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(FHIRHelpers.ToDateTime(C.onset) between {2} and {3})
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient -&gt; Condition] C
        where {0} )
      </pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:26:1</mdrUrn>
  </uiField>

  <!-- Diagnosis ICD-10 -->
  <uiField>
    <codesystem>
      <name>icd10</name>
      <url>http://hl7.org/fhir/sid/icd-10</url>
    </codesystem>
    <codesystem>
      <name>icd10gm</name>
      <url>http://fhir.de/CodeSystem/dimdi/icd-10-gm</url>
    </codesystem>
    <entityType>
      <atomicExpression>
      <atomicCqlExpression>( (not (Matches(''{2}'',''\\w\\d+'') and exists
          from [Condition] C
          where exists
          from C.code.coding CD
          where StartsWith(CD.code,''{2}'') and (CD.system = ''http://hl7.org/fhir/sid/icd-10'' or CD.system = ''http://fhir.de/CodeSystem/dimdi/icd-10-gm0'')))
          and not exists([Condition: Code ''{2}'' from icd10]) and not
          exists([Condition: Code ''{2}'' from icd10gm]) )
        </atomicCqlExpression>
        <operator>&lt;&gt;</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>( (Matches(''{2}'',''\\w\\d+'') and exists
          from [Condition] C
          where exists
          from C.code.coding CD
          where StartsWith(CD.code,''{2}'') and (CD.system = ''http://hl7.org/fhir/sid/icd-10'' or CD.system = ''http://fhir.de/CodeSystem/dimdi/icd-10-gm0''))
          or exists([Condition: Code ''{2}'' from icd10]) or exists([Condition:
          Code ''{2}'' from icd10gm]) )
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>( (not (Matches(''{2}'',''\\w\\d+'') and
          exists from [Patient -&gt; Condition] C
          where exists from C.code.coding CD
          where StartsWith(CD.code,''{2}'') and (CD.system = ''http://hl7.org/fhir/sid/icd-10'' or CD.system = ''http://fhir.de/CodeSystem/dimdi/icd-10-gm0'')))
          and not exists([Patient -&gt; Condition: Code ''{2}'' from icd10]) and not
          exists([Patient -&gt; Condition: Code ''{2}'' from icd10gm]) )
        </atomicCqlExpression>
        <operator>&lt;&gt;</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>( (Matches(''{2}'',''\\w\\d+'') and
          exists from [Patient -&gt; Condition] C
          where exists from C.code.coding CD
          where StartsWith(CD.code,''{2}'') and (CD.system = ''http://hl7.org/fhir/sid/icd-10'' or CD.system = ''http://fhir.de/CodeSystem/dimdi/icd-10-gm0''))
          or exists([Patient -&gt; Condition: Code ''{2}'' from icd10]) or
          exists([Patient -&gt; Condition: Code ''{2}'' from icd10gm]))
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:27:1</mdrUrn>
  </uiField>

  <!-- Diagnosis age donor -->
  <uiField>
    <codesystem/>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) {0} Ceiling({2})
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) between Ceiling({2}) and
          Ceiling({3}))
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Condition] C
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) {0} Ceiling({2})
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>(AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) between Ceiling({2}) and
          Ceiling({3}))
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient -&gt; Condition] C
        where {0} )
      </pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:28:1</mdrUrn>
  </uiField>

  <!-- Body Weight -->
  <uiField>
    <codesystem>
      <name>loinc</name>
      <url>http://loinc.org</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg'' and (O.value as Quantity) &gt;
          {2} ''kg'')
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Observation: Code ''29463-7'' from loinc] O
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg'' and (O.value as Quantity) &gt;
          {2} ''kg'')
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient -&gt; Observation: Code ''29463-7'' from loinc] O
        where {0} )
      </pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:29:1</mdrUrn>
  </uiField>

  <!-- Body Height -->
  <uiField>
    <codesystem>
      <name>loinc</name>
      <url>http://loinc.org</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(O.value as Quantity) {0} {2} ''cm''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''cm'' and (O.value as Quantity) &gt;
          {2} ''cm'')
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Observation: Code ''8302-2'' from loinc] O
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(O.value as Quantity) {0} {2} ''cm''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''cm'' and (O.value as Quantity) &gt;
          {2} ''cm'')
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient -&gt; Observation: Code ''8302-2'' from loinc] O
        where {0} )
      </pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:30:1</mdrUrn>
  </uiField>

  <!-- BMI -->
  <uiField>
    <codesystem>
      <name>loinc</name>
      <url>http://loinc.org</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg/m2''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg/m2'' and (O.value as Quantity)
          &gt; {2} ''kg/m2'')
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Observation: Code ''39156-5'' from loinc] O
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg/m2''</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <atomicExpression>
        <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg/m2'' and (O.value as Quantity)
          &gt; {2} ''kg/m2'')
        </atomicCqlExpression>
        <operator>...</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient -&gt; Observation: Code ''39156-5'' from loinc] O
        where {0} )
      </pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:31:1</mdrUrn>
  </uiField>

  <!-- Smoking habit -->
  <uiField>
    <codesystem>
      <name>loinc</name>
      <url>http://loinc.org</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>O.value.coding contains Code ''{2}'' from loinc</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Observation: Code ''72166-2'' from loinc] O
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>O.value.coding contains Code ''{2}'' from loinc</atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Patient -&gt; Observation: Code ''72166-2'' from loinc] O
        where {0} )
      </pathCqlExpression>
      <singleton>
        <name>Patient</name>
      </singleton>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:32:1</mdrUrn>
    <permittedValue>
      <cqlValue>LA18976-3</cqlValue>
      <mdrKey>smoker_yes</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA18977-1</cqlValue>
      <mdrKey>smoker_yes</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA18981-3</cqlValue>
      <mdrKey>smoker_yes</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA18982-1</cqlValue>
      <mdrKey>smoker_yes</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA15920-4</cqlValue>
      <mdrKey>former_smoker</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA18978-9</cqlValue>
      <mdrKey>smoker_no</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA18979-7</cqlValue>
      <mdrKey>smoker_yes</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>LA18980-5</cqlValue>
      <mdrKey>smoking_habit_uncharted</mdrKey>
    </permittedValue>
  </uiField>

  <!-- Fasting status -->
  <uiField>
    <codesystem>
      <name>FastingStatus</name>
      <url>http://terminology.hl7.org/CodeSystem/v2-0916</url>
    </codesystem>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>S.collection.fastingStatus.coding contains Code ''{2}'' from
          FastingStatus
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Patient</entityTypeName>
      <pathCqlExpression>
        exists(
        from [Specimen] S
        where {0} )
      </pathCqlExpression>
    </entityType>
    <entityType>
      <atomicExpression>
        <atomicCqlExpression>Specimen.collection.fastingStatus.coding contains Code ''{2}'' from
          FastingStatus
        </atomicCqlExpression>
        <operator>DEFAULT</operator>
      </atomicExpression>
      <entityTypeName>Specimen</entityTypeName>
      <pathCqlExpression>{0}</pathCqlExpression>
    </entityType>
    <extensionUrl/>
    <mdrUrn>urn:mdr16:dataelement:33:1</mdrUrn>
    <permittedValue>
      <cqlValue>F</cqlValue>
      <mdrKey>fasting_sober</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>NF</cqlValue>
      <mdrKey>fasting_non_sober</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>FNA</cqlValue>
      <mdrKey>fasting_status_other</mdrKey>
    </permittedValue>
    <permittedValue>
      <cqlValue>NG</cqlValue>
      <mdrKey>fasting_status_uncharted</mdrKey>
    </permittedValue>
  </uiField>
</cqlConfig>
