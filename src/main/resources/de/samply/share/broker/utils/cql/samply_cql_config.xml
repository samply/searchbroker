<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
	This config file defines snippets for CQL queries.

	The <preamble> must contain information about FHIR libraries and a variable {0} where the context (Specimen, Patient) will be inserted as well as a variable {1] where codesystems are inserted.
    For fields (depending on entity type) which need a singleton statement the variable {2} definie the place where all singleton statements are inserted.
    Variable binding:
        {0}     context (Specimen, Patient)
        {1}     codesystem definitions
        {2}     singleton statements

	The <pathCqlExpression> represents the path starting at the resource corresponding to the context ending with the field in the FHIR resource corresponding to the UI field.
    Variable binding:
	    {0}     atomic expressions will be inserted here.

	Every atomic expression <atomicExpression> represents one condition for a field given by an operator and one or two values.
	It will be choosen dependent on the <operator>. If no operator-specific snippet is provided the connector will use the snippet
	defined for <operator>DEFAULT</operator>.
	Variable binding:
	    {0}     operator
	    {1}     url of an extension (if present)
	    {2}     the first value
	    {3}     the second value (max. value)

	IMPORTANT:
		A single apostrophe ' must be escaped by a double apostrophe ''
		Additionally characters such as > < ... must be encoded as &lt; &gt; ... according to XML (see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references)
-->
<cqlConfig>
    <preamble>library Retrieve
using FHIR version ''4.0.0''
include FHIRHelpers version ''4.0.0''

{1}

context {0}

{2}

define InInitialPopulation:
    </preamble>

    <!-- Sampling date -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:12:1</mdrUrn>
        <codesystem/>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Specimen] S 
	  where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>FHIRHelpers.ToDateTime(S.collection.collected) {0} {2}</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(FHIRHelpers.ToDateTime(S.collection.collected) between {2} and {3})</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
              <operator>DEFAULT</operator>
              <atomicCqlExpression>FHIRHelpers.ToDateTime(Specimen.collection.collected) {0} {2}</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(FHIRHelpers.ToDateTime(Specimen.collection.collected) between {2} and {3})</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>

    <!-- Donor age -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:14:1</mdrUrn>
        <codesystem/>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>AgeInYears() {0} {2}</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(AgeInYears() between {2} and {3})
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Patient] P
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(Today() - {2} year) {0} FHIRHelpers.ToDate(P.birthDate)</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(FHIRHelpers.ToDateTime(P.birthDate) between (Today() - {3} year) and (Today() - {2} year))</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>

    <!-- Sample type tissue -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:15:1</mdrUrn>
        <codesystem>
            <name>SampleMaterialType</name>
            <url>https://fhir.bbmri.de/CodeSystem/SampleMaterialType</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Specimen] S 
	  where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>S.type.coding contains Code ''{2}'' from SampleMaterialType</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>Specimen.type.coding contains Code ''{2}'' from SampleMaterialType</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <permittedValue>
            <mdrKey>whole_blood-EDTA</mdrKey>
            <cqlValue>whole-blood</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>whole_blood_stabillised</mdrKey>
            <cqlValue>whole-blood</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>plasma_EDTA</mdrKey>
            <cqlValue>blood-plasma</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>plasma_citrat</mdrKey>
            <cqlValue>blood-plasma</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>plasma_stabilised</mdrKey>
            <cqlValue>blood-plasma</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>serum</mdrKey>
            <cqlValue>blood-serum</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>periphal_blood_cells</mdrKey>
            <cqlValue>peripheral-blood-cells-vital</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>bone_marrow</mdrKey>
            <cqlValue>bone-marrow</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>liqour/CSF</mdrKey>
            <cqlValue>csf-liquor</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>ascites</mdrKey>
            <cqlValue>ascites</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>saliva</mdrKey>
            <cqlValue>saliva</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>urine_spontaneous</mdrKey>
            <cqlValue>urine</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>urine_cumulative</mdrKey>
            <cqlValue>urine</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>faeces</mdrKey>
            <cqlValue>stool-faeces</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>DNA</mdrKey>
            <cqlValue>dna</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>cfDNA</mdrKey>
            <cqlValue>cf-dna</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>RNA</mdrKey>
            <cqlValue>rna</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>liquid_biosamples_other</mdrKey>
            <cqlValue>liquid-other</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_formalin</mdrKey>
            <cqlValue>tissue-formalin</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_frozen</mdrKey>
            <cqlValue>tissue-frozen</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_PAX_or_similar</mdrKey>
            <cqlValue>tissue-paxgene-or-else</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_other</mdrKey>
            <cqlValue>tissue-other</cqlValue>
        </permittedValue>
    </uiField>

    <!-- Sample type liquid -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:16:1</mdrUrn>
        <codesystem>
            <name>SampleMaterialType</name>
            <url>https://fhir.bbmri.de/CodeSystem/SampleMaterialType</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Specimen] S 
	  where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>S.type.coding contains Code ''{2}'' from SampleMaterialType</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>Specimen.type.coding contains Code ''{2}'' from SampleMaterialType</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <permittedValue>
            <mdrKey>whole_blood-EDTA</mdrKey>
            <cqlValue>whole-blood</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>whole_blood_stabillised</mdrKey>
            <cqlValue>whole-blood</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>plasma-EDTA</mdrKey>
            <cqlValue>blood-plasma</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>plasma-citrat</mdrKey>
            <cqlValue>blood-plasma</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>plasma_stabilised</mdrKey>
            <cqlValue>blood-plasma</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>serum</mdrKey>
            <cqlValue>blood-serum</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>periphal_blood_cells</mdrKey>
            <cqlValue>peripheral-blood-cells-vital</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>bone_marrow</mdrKey>
            <cqlValue>bone-marrow</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>liqour/CSF</mdrKey>
            <cqlValue>csf-liquor</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>ascites</mdrKey>
            <cqlValue>ascites</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>saliva</mdrKey>
            <cqlValue>saliva</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>urine_spontaneous</mdrKey>
            <cqlValue>urine</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>urine_cumulative</mdrKey>
            <cqlValue>urine</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>faeces</mdrKey>
            <cqlValue>stool-faeces</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>DNA</mdrKey>
            <cqlValue>dna</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>cfDNA</mdrKey>
            <cqlValue>cf-dna</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>RNA</mdrKey>
            <cqlValue>rna</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>liquid_biosamples_other</mdrKey>
            <cqlValue>liquid-other</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_formalin</mdrKey>
            <cqlValue>tissue-formalin</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_frozen</mdrKey>
            <cqlValue>tissue-frozen</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_PAX_or_similar</mdrKey>
            <cqlValue>tissue-paxgene-or-else</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>tissue_other</mdrKey>
            <cqlValue>tissue-other</cqlValue>
        </permittedValue>
    </uiField>

    <!-- Storage temperature -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:17:1</mdrUrn>
        <codesystemName>StorageTemperature</codesystemName>
        <codesystem>
            <name>StorageTemperature</name>
            <url>https://fhir.bbmri.de/CodeSystem/StorageTemperature</url>
        </codesystem>
        <extensionUrl>https://fhir.bbmri.de/StructureDefinition/StorageTemperature</extensionUrl>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Specimen] S 
	  where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>
        ( exists(
            from S.extension E
            where E.url = ''{1}''
              and E.value.coding contains Code ''{2}'' from StorageTemperature ) )
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>
        ( exists(
            from Specimen.extension E
            where E.url = ''{1}''
              and E.value.coding contains Code ''{2}'' from StorageTemperature ) )
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <permittedValue>
            <!-- Plasma-Lithium-Heparin -->
            <mdrKey>plasma-lithium-heparin</mdrKey>
            <cqlValue>temperatureOther</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Room temperature -->
            <mdrKey>RT</mdrKey>
            <cqlValue>temperatureRoom</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- 2°C bis 10°C -->
            <mdrKey>two_to_ten_degrees</mdrKey>
            <cqlValue>temperature2to10</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- 4°C -->
            <mdrKey>four_degrees</mdrKey>
            <cqlValue>temperatureOther</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Minus 18°C to minus 35°C -->
            <mdrKey>minus_eighteen_to_minus_thirty-five_degrees</mdrKey>
            <cqlValue>temperature-18to-35</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Minus 60°C to minus 85°C -->
            <mdrKey>minus_sixty_to_minus_eighty_five_degrees</mdrKey>
            <cqlValue>temperature-60to-85</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Liquid nitrogen -->
            <mdrKey>gaseous_nitrogen</mdrKey>
            <cqlValue>temperatureGN</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Liquid nitrogen -->
            <mdrKey>liquid_nitrogene</mdrKey>
            <cqlValue>temperatureLN</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Other storage temperature -->
            <mdrKey>storage_temperature_other</mdrKey>
            <cqlValue>temperatureOther</cqlValue>
        </permittedValue>
        <permittedValue>
            <!-- Uncharted storage temperature -->
            <mdrKey>storage_temperature_uncharted</mdrKey>
            <cqlValue>temperatureOther</cqlValue>
        </permittedValue>
    </uiField>

    <!-- Sex -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:23:1</mdrUrn>
        <codesystems/>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>Patient.gender = ''{2}''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>&lt;&gt;</operator>
                <atomicCqlExpression>P.gender != ''{2}''</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>
    exists(
	  from [Patient] P
	  where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>P.gender = ''{2}''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>&lt;&gt;</operator>
                <atomicCqlExpression>P.gender != ''{2}''</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <permittedValue>
            <mdrKey>female</mdrKey>
            <cqlValue>female</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>male</mdrKey>
            <cqlValue>male</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>sex_other/intersexual</mdrKey>
            <cqlValue>other</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>sex_uncharted</mdrKey>
            <cqlValue>unknown</cqlValue>
        </permittedValue>
    </uiField>

    <!-- Date of diagnosis -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:26:1</mdrUrn>
        <codesystem/>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Condition] C
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>FHIRHelpers.ToDateTime(C.onset) {0} {2}</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(FHIRHelpers.ToDateTime(C.onset) between {2} and {3})</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <singleton>
                <name>Patient</name>
            </singleton>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Condition] C
      where {0} )
            </pathCqlExpression>
			-->
            <atomicExpression>
              <operator>DEFAULT</operator>
              <atomicCqlExpression>FHIRHelpers.ToDateTime(C.onset) {0} {2}</atomicCqlExpression></atomicExpression>
            <atomicExpression>
              <operator>...</operator>
              <atomicCqlExpression>(FHIRHelpers.ToDateTime(C.onset) between {2} and {3})</atomicCqlExpression></atomicExpression>
        </entityType>
    </uiField>

    <!-- Diagnosis ICD-10 -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:27:1</mdrUrn>
        <codesystem>
            <name>icd10</name>
            <url>http://hl7.org/fhir/sid/icd-10</url>
        </codesystem>
        <codesystem>
            <name>icd10gm</name>
            <url>http://fhir.de/CodeSystem/dimdi/icd-10-gm</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Condition] C
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(exists([Condition: Code ''{2}'' from icd10]) or exists([Condition: Code ''{2}'' from icd10gm]))</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <singleton>
                <name>Patient</name>
            </singleton>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Condition] C
      where {0} )
            </pathCqlExpression>
			-->
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(exists([Condition: Code ''{2}'' from icd10]) or exists([Condition: Code ''{2}'' from icd10gm]))</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>

    <!-- Diagnosis age donor -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:28:1</mdrUrn>
        <codesystem/>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Condition] C
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) {0} Ceiling({2})</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>(AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) between Ceiling({2}) and Ceiling({3}))</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <singleton>
              <name>Patient</name>
            </singleton>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Condition] C
      where {0} )
             </pathCqlExpression>
			 -->
             <atomicExpression>
               <operator>DEFAULT</operator>
               <atomicCqlExpression>AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) {0} Ceiling({2})</atomicCqlExpression></atomicExpression>
             <atomicExpression>
               <operator>...</operator>
               <atomicCqlExpression>(AgeInYearsAt(FHIRHelpers.ToDateTime(C.onset)) between Ceiling({2}) and Ceiling({3}))</atomicCqlExpression>
             </atomicExpression>
        </entityType>
    </uiField>

    <!-- Body Weight -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:29:1</mdrUrn>
        <codesystem>
            <name>loinc</name>
            <url>http://loinc.org</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Observation: Code ''29463-7'' from loinc] O
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg'') and (O.value as Quantity) &gt; {2} ''kg'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <singleton>
                <name>Patient</name>
            </singleton>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Observation: Code ''29463-7'' from loinc] O
      where {0} )
            </pathCqlExpression>
			-->
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg'') and (O.value as Quantity) &gt; {2} ''kg'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>

    <!-- Body Height -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:30:1</mdrUrn>
        <codesystem>
            <name>loinc</name>
            <url>http://loinc.org</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Observation: Code ''8302-2'' from loinc] O
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(O.value as Quantity) {0} {2} ''cm''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''cm'') and (O.value as Quantity) &gt; {2} ''cm'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <singleton>
                <name>Patient</name>
            </singleton>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Observation: Code ''8302-2'' from loinc] O
      where {0} )
            </pathCqlExpression>
			-->
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(O.value as Quantity) {0} {2} ''cm''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''cm'') and (O.value as Quantity) &gt; {2} ''cm'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>

    <!-- BMI -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:31:1</mdrUrn>
        <codesystem>
            <name>loinc</name>
            <url>http://loinc.org</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Observation: Code ''39156-5'' from loinc] O
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg/m2''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg/m2'') and (O.value as Quantity) &gt; {2} ''kg/m2'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <singleton>
                <name>Patient</name>
            </singleton>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Observation: Code ''39156-5'' from loinc] O
      where {0} )
            </pathCqlExpression>
			-->
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>(O.value as Quantity) {0} {2} ''kg/m2''</atomicCqlExpression>
            </atomicExpression>
            <atomicExpression>
                <operator>...</operator>
                <atomicCqlExpression>((O.value as Quantity) &lt; {3} ''kg/m2'') and (O.value as Quantity) &gt; {2} ''kg/m2'')</atomicCqlExpression>
            </atomicExpression>
        </entityType>
    </uiField>

    <!-- Smoking habit -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:32:1</mdrUrn>
        <codesystem>
            <name>loinc</name>
            <url>http://loinc.org</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Observation: Code ''72166-2'' from loinc] O
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>O.value.coding contains Code ''{2}'' from loinc</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>true</pathCqlExpression>
			<!--
            <pathCqlExpression>
    exists(
      from [Patient -&gt; Observation: Code ''72166-2'' from loinc] O
      where {0} )
             </pathCqlExpression>
			 -->
             <atomicExpression>
               <operator>DEFAULT</operator>
                 <atomicCqlExpression>O.value.coding contains Code ''{2}'' from loinc</atomicCqlExpression>
             </atomicExpression>
        </entityType>
        <permittedValue>
            <mdrKey>smoker_yes</mdrKey>
            <cqlValue>LA18976-3</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>former_smoker</mdrKey>
            <cqlValue>LA15920-4</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>smoker_no</mdrKey>
            <cqlValue>LA18978-9</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>smoking_habit_uncharted</mdrKey>
            <cqlValue>LA18979-7</cqlValue>
        </permittedValue>
    </uiField>

    <!-- Fasting status -->
    <uiField>
        <mdrUrn>urn:mdr16:dataelement:33:1</mdrUrn>
        <codesystem>
            <name>FastingStatus</name>
            <url>http://terminology.hl7.org/CodeSystem/v2-0916</url>
        </codesystem>
        <extensionUrl/>
        <entityType>
            <entityTypeName>Patient</entityTypeName>
            <pathCqlExpression>
    exists(
      from [Specimen] S
      where {0} )
            </pathCqlExpression>
            <atomicExpression>
                <operator>DEFAULT</operator>
                <atomicCqlExpression>S.collection.fastingStatus.coding contains Code ''{2}'' from FastingStatus
                </atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <entityType>
            <entityTypeName>Specimen</entityTypeName>
            <pathCqlExpression>{0}</pathCqlExpression>
            <atomicExpression>
              <operator>DEFAULT</operator>
              <atomicCqlExpression>Specimen.collection.fastingStatus.coding contains Code ''{2}'' from FastingStatus</atomicCqlExpression>
            </atomicExpression>
        </entityType>
        <permittedValue>
            <mdrKey>fasting_sober</mdrKey>
            <cqlValue>F</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>fasting_non_sober</mdrKey>
            <cqlValue>NF</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>fasting_status_other</mdrKey>
            <cqlValue>FNA</cqlValue>
        </permittedValue>
        <permittedValue>
            <mdrKey>fasting_status_uncharted</mdrKey>
            <cqlValue>NG</cqlValue>
        </permittedValue>
    </uiField>
</cqlConfig>